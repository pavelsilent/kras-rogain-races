plugins {
  id 'java'
  id 'org.springframework.boot' version '3.5.5'
  id 'io.spring.dependency-management' version '1.1.7'
  id "com.github.node-gradle.node" version "7.0.1"
}

group = 'pro.pavel.silent'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.apache.commons:commons-lang3:3.18.0'
  implementation 'org.apache.commons:commons-text:1.10.0'
  implementation 'org.liquibase:liquibase-core'
  implementation 'io.swagger.core.v3:swagger-annotations:2.2.36'
  implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  runtimeOnly 'org.postgresql:postgresql'
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
  useJUnitPlatform()
}

node {
  download = true
  version = "22.19.0"
  npmVersion = "10.2.4"
  workDir = file("${project.buildDir}/nodejs")
  npmWorkDir = file("${project.buildDir}/npm")
}

//tasks.register("npmInstall", com.github.gradle.node.npm.task.NpmInstallTask) {
//  workingDir.set(file("${project.projectDir}/client"))
//}

tasks.register("npmBuild", com.github.gradle.node.npm.task.NpmTask) {
  dependsOn("npmInstall")
  workingDir.set(file("${project.projectDir}/client"))
  args.set(["run", "build", "--", "--configuration", "production"])
}

tasks.register("copyFrontend", Copy) {
  dependsOn("npmBuild")
  from("${project.projectDir}/client/dist/krsk-rogain-results-front/browser") // ⚠️ тут укажи имя папки из Angular dist
  into("${project.buildDir}/resources/main/static")
}

tasks.named("processResources") {
  dependsOn("copyFrontend")
}
